#!/usr/bin/env python3
import soil_moisture
import re
import os
from datetime import datetime
from dateutil import tz
import Adafruit_DHT
import time
from google.cloud import bigquery

dataset_id = 'sensor'
table_id = 'data'
REGEX_NUMBER = re.compile(r'(\d+\.\d+|\d*\.\d+|\d+)')

os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = '/usr/local/share/google-cloud/service-accounts/sensor.json'

client = bigquery.Client(project='admin-project-267210')

dataset_ref = client.dataset(dataset_id)
table_ref = dataset_ref.table(table_id)
table = client.get_table(table_ref)


# current date and time
Warsaw_tz= tz.gettz('Europe/Warsaw')
now = datetime.now(tz=Warsaw_tz)
timestamp = datetime.timestamp(now)

humidity=0
temperature = 0
for i in range(6):
    humidity_reading, temperature_reading = Adafruit_DHT.read_retry(Adafruit_DHT.DHT11, 4)
    print(humidity_reading)
    while humidity_reading > 100:
        sleep(2)
        humidity_reading, temperature_reading = Adafruit_DHT.read_retry(Adafruit_DHT.DHT11, 4)
    humidity = humidity + humidity_reading
    temperature = temperature + temperature_reading


humidity = float(humidity/6)
temperature = float(temperature/6)
record = (
	float(REGEX_NUMBER.search(str(humidity)).group(1)), 
	float(REGEX_NUMBER.search(str(temperature)).group(1)), 
	float(REGEX_NUMBER.search(str(timestamp)).group(1)),
	float(REGEX_NUMBER.search(str(soil_moisture.soil_moisture())).group(1))
)

errors = client.insert_rows(table, [record])

assert errors == [], f'errors occurred {", ".join((str(type(e)) + " " + str(e) for e in errors))}'
print(now)

